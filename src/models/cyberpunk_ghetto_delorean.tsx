/*
  Auto-generated by: https://github.com/pmndrs/gltfjsx
  Command: npx gltfjsx@6.2.16 scene.gltf --transform --types 
  Files: scene.gltf [5.18KB] > scene-transformed.glb [607.3KB] (-11624%)
  Author: senya.frozenov (https://sketchfab.com/senya.frozenov)
  License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
  Source: https://sketchfab.com/3d-models/cyberpunk-ghetto-delorean-6455952d4f884b83a8d22877f9aba213
  Title: Cyberpunk ghetto DeLorean
*/

import type * as THREE from 'three'
import type { GLTF } from 'three-stdlib'
import { useGLTF } from '@react-three/drei'
import { useFrame } from '@react-three/fiber'
import { useRef } from 'react'
import { getModelPath } from '@/utils'

interface GLTFResult extends GLTF {
  nodes: {
    dmc_M_dmc_0: THREE.Mesh
  }
  materials: {
    M_dmc: THREE.MeshStandardMaterial
  }
}

const path = getModelPath('car')

export default function CyberpunkGhettoDeLorean(props: JSX.IntrinsicElements['group']) {
  const modelRef = useRef<THREE.Group>(null!)
  const { nodes, materials } = useGLTF(path) as GLTFResult

  useFrame(({ camera, clock }) => {
    const y = Math.sin(clock.elapsedTime) * 0.15
    modelRef.current.position.set(0, y, -3.5)
    camera.add(modelRef.current)
  })

  return (
    <group {...props} ref={modelRef} dispose={null}>
      <mesh
        geometry={nodes.dmc_M_dmc_0.geometry}
        material={materials.M_dmc}
        rotation={[-Math.PI / 2, 0, 0]}
        scale={1.065}
      />
    </group>
  )
}

useGLTF.preload(path)
