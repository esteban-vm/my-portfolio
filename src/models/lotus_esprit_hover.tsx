/*
  Auto-generated by: https://github.com/pmndrs/gltfjsx
  Command: npx gltfjsx@6.2.16 scene.gltf --transform --types 
  Files: scene.gltf [137.31KB] > scene-transformed.glb [2.54MB] (-1751%)
  Author: maomornity (https://sketchfab.com/maomornity)
  License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
  Source: https://sketchfab.com/3d-models/lotus-esprit-hover-gt-2076-79fef7f8b1174bf69305e8c28431d26d
  Title: Lotus Esprit Hover GT 2076
*/

import type * as THREE from 'three'
import type { GLTF } from 'three-stdlib'
import { useGLTF } from '@react-three/drei'
import { useFrame } from '@react-three/fiber'
import { useRef } from 'react'
import { getModelPath } from '@/utils'

interface GLTFResult extends GLTF {
  nodes: {
    Cybercar_Carbase_0: THREE.Mesh
    Cybercar_MatPaint_0: THREE.Mesh
  }
  materials: {
    PaletteMaterial001: THREE.MeshPhysicalMaterial
    PaletteMaterial002: THREE.MeshStandardMaterial
  }
}

const path = getModelPath('lotus_esprit_hover')

export default function LotusEspritHover(props: JSX.IntrinsicElements['group']) {
  const modelRef = useRef<THREE.Group>(null!)
  const { nodes, materials } = useGLTF(path) as GLTFResult

  useFrame(({ camera, clock }) => {
    const y = Math.sin(clock.elapsedTime) * 0.2
    modelRef.current.position.set(0, y, -3.5)
    camera.add(modelRef.current)
  })

  return (
    <group {...props} ref={modelRef} dispose={null}>
      <mesh
        geometry={nodes.Cybercar_Carbase_0.geometry}
        material={materials.PaletteMaterial001}
        position={[39.383, 3478.175, -1648.109]}
        scale={100}
      />
      <mesh
        geometry={nodes.Cybercar_MatPaint_0.geometry}
        material={materials.PaletteMaterial002}
        position={[39.383, 3478.175, -1648.109]}
        scale={100}
      />
    </group>
  )
}

useGLTF.preload(path)
